[ { "title": "Linux/UNIX安装Redis7.0", "url": "/posts/linux-redis-install/", "categories": "Linux, Redis", "tags": "Linux", "date": "2022-09-21 10:00:00 +0000", "snippet": "##源码安装Redis1.下载压缩包在Redis版本库：https://download.redis.io/releases/ 可根据自己的需求选择下载对应的版本[root@localhost ~]# cd /usr/local/src/[root@localhost ~]# wget https://download.redis.io/releases/redis-7.0.4.tar.gz[root@localhost ~]# tar zvxf redis-7.0.4.tar.gz2.安装[root@localhost ~]# yum -y install gcc gcc-c++[root@localhost ~]# mkdir /usr/local/redis[root@localhost ~]# cd /usr/local/src/redis-7.0.4[root@localhost ~]# make[root@localhost ~]# make install PREFIX=/usr/local/redis 注意 由于redis是c语言编写的，所以我们需要先安装gcc(yum -y install gcc gcc-c++)3.启动上述步骤如果没有问题，Redis已经安装在/usr/local/redis/目录下了，相关启动脚本在bin目录下[root@localhost ~]# /usr/local/redis/bin/redis-server有启动页面说明启动成功设置服务(service管理)首先将redis-7.0.4/utils/redis_init_script文件复制到/etc/init.d下，同时命名为redis，查看redis文件，根据相关路径创建启动配置文件(也可自行更改 对应即可)。[root@localhost ~]# cp /usr/local/src/redis-7.0.4/utils/redis_init_script /etc/init.d/redis[root@localhost ~]# cat /etc/init.d/redis部分代码...省略...REDISPORT=6379EXEC=/usr/local/bin/redis-serverCLIEXEC=/usr/local/bin/redis-cliPIDFILE=/var/run/redis_${REDISPORT}.pidCONF=\"/etc/redis/${REDISPORT}.conf\"...省略... 复制配置文件[root@localhost ~]# mkdir /etc/redis[root@localhost ~]# cp /usr/local/src/redis-7.0.4/redis.conf /etc/redis/6379.conf根据相关需求，编辑/etc/redis/6210.conf配置文件即可#是否在后台执行，yes：后台运行；no：不是后台运行daemonize yes#指定 redis 只接收来自于该 IP 地址的请求，如果不进行设置，那么将处理所有请求bind * -::*#配置可以让用户使用AUTH命令来认证密码，才能使用其他命令。requirepass password加入系统服务[root@localhost ~]# vi /lib/systemd/system/redis.service配置代码[Unit]Description=redisAfter=network.target[Service]Type=forkingPIDFile=/var/run/redis_6379.pidExecStart=/usr/local/redis/bin/redis-server /etc/redis/6379.confExecReload=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPIDPrivateTmp=true[Install]WantedBy=multi-user.target刷新配置&amp;启动[root@localhost ~]# systemctl daemon-reload[root@localhost ~]# systemctl start redis[root@localhost ~]# systemctl enable redis.service参数说明：[Unit] 表示这是基础信息Description 是描述After 是在那个服务后面启动，一般是网络服务启动后启动[Service] 表示这里是服务信息ExecStart 是启动服务的命令ExecReload 是重启服务的指令ExecStop 是停止服务的指令[Install] 表示这是是安装相关信息WantedBy 是以哪种方式启动：multi-user.target表明当系统以多用户方式（默认的运行级别）启动时，这个服务需要被自动运行。防火墙的设置firewall-cmd –state #查看防火墙是否开启systemctl start firewalld #开启systemctl stop firewalld #关闭" }, { "title": "Linux/UNIX安装MySQL", "url": "/posts/linux-mysql-install/", "categories": "Linux, MySQL", "tags": "Linux", "date": "2022-09-20 04:00:00 +0000", "snippet": "Linux/UNIX 上安装 MySQLLinux平台上推荐使用RPM包来安装Mysql,MySQL AB提供了以下RPM包的下载地址：MySQL - MySQL服务器。你需要该选项，除非你只想连接运行在另一台机器上的MySQL服务器。MySQL-client - MySQL 客户端程序，用于连接并操作Mysql服务器。MySQL-devel - 库和包含文件，如果你想要编译其它MySQL客户端，例如Perl模块，则需要安装该RPM包。MySQL-shared - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so*)，使用MySQL。MySQL-bench - MySQL数据库服务器的基准和性能测试工具。安装前，我们可以检测系统是否自带安装 MySQL:rpm -qa | grep mysql如果你系统有安装，那可以选择进行卸载:rpm -e mysql　　 // 普通删除模式rpm -e –nodeps mysql // 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除安装MySQL1.安装依赖包在 Centos7 系统下使用 yum 命令安装 MySQL，需要注意的是 CentOS7 版本中 MySQL数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 Yum 资源包，下载地址为：https://dev.mysql.com/downloads/repo/yum/[root@localhost ~]# cd /usr/local/src/[root@localhost ~]# wget http://repo.mysql.com/mysql80-community-release-el7-7.noarch.rpm[root@localhost ~]# rpm -ivh mysql80-community-release-el7-7.noarch.rpm[root@localhost ~]# yum update[root@localhost ~]# yum install mysql-server2.权限设置[root@localhost ~]# chown -R mysql:mysql /var/lib/mysql/ 注意 启动MySQL如果遇到权限不足的情况，cat /etc/my.cnf // 查看mysqld配置datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.socklog-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid根据log文件路径，查看错误日志，调整相关权限例 chown -R mysql:mysql /var/run/mysqld/mysqld.pid3.启动 MySQL初始化root用户的密码已设置并存储在错误日志文件中，查看并自行保存初始密码grep ‘temporary password’ /var/log/mysqld.log[root@localhost ~]# mysqld --initialize[root@localhost ~]# systemctl start mysqld[root@localhost ~]# systemctl status mysqld命令解释： 初始化 MySQL启动 MySQL查看 MySQL 运行状态4.初始化MySQL服务器初始化（从MySQL 5.7开始）在 MySQL 服务器初始启动时，如果服务器的数据目录为空，则会发生以下情况： MySQL 服务器已初始化。 在数据目录中生成SSL证书和密钥文件。 安装并启用该 validate_password 插件。 将创建一个超级用户 帐户’root’@‘localhost’。并会设置超级用户的密码，将其存储在错误日志文件/var/log/mysqld.log中。[root@localhost ~]# grep 'temporary password' /var/log/mysqld.log[root@localhost ~]# mysql -uroot -p[root@localhost ~]# ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass4!';命令解释： 查看初始化密码root用户登录(使用初始化密码)修改root新密码求密码至少包含1个大写字母、1个小写字母、1个数字和1个特殊字符，密码总长度至少为8个字符。5.验证MySQL安装[root@localhost ~]# mysqladmin --versionmysqladmin Ver 8.0.30 for Linux on x86_64 (MySQL Community Server - GPL)6.登录 MySQL当 MySQL 服务已经运行时, 我们可以通过 MySQL 自带的客户端工具登录到 MySQL 数据库中, 首先打开命令提示符, 输入以下格式的命名:mysql -h 主机名 -u 用户名 -p参数说明：-h : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;-u : 登录的用户名;-p : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。如果我们要登录本机的 MySQL 数据库，只需要输入以下命令即可：mysql -u root -p按回车确认, 如果安装正确且 MySQL 正在运行, 会得到以下响应:Enter password:若密码存在, 输入密码登录, 不存在则直接按回车登录。登录成功后你将会看到 Welcome to the MySQL monitor… 的提示语。然后命令提示符会一直以 mysql&gt; 加一个闪烁的光标等待命令的输入, 输入 exit 或 quit 退出登录。重置MySQL密码1.无密码登陆编辑mysql配置文件:my.cnf，vim /etc/my.cnf在[mysqld]配置下添加：skip-grant-tables 保存退出；2.使配置生效重启mysql服务service mysqld restart；3.将旧密码置空 连接mysql mysql -u root -p 提示输入密码时直接敲回车。 选择数据库 use mysql 将密码置空 update user set authentication_string = ‘’ where user = ‘root’; 退出 quit4.去除免密码登陆删掉步骤1的语句(或者以#注释)’skip-grant-tables’重启服务 service mysqld restart5.修改密码mysql -u root -p提示输入密码时直接敲回车，刚刚已经将密码置空了ALTER USER ‘root’@’localhost’ IDENTIFIED BY ‘MyNewPass4!’;此句命令若报错， 可能是localhost在实际应用中作了修改，可以改为以下命令行ALTER USER ‘root’@’%’ IDENTIFIED BY ‘MyNewPass4!’;密码形式过于简单则会报错" }, { "title": "Python3安装", "url": "/posts/linux-python3-install/", "categories": "Linux, Python3", "tags": "Linux", "date": "2022-09-19 04:00:00 +0000", "snippet": "Centos7系统默认安装的python版本为python2.x，目前所开发的Python脚本都是基于3.x，我们要额外安装Python3。先来查看python安装位置，一般是位于/usr/bin/python目录下[root@localhost ~]# which python/usr/bin/python安装Python31.安装依赖包[root@localhost ~]# yum -y groupinstall \"Development tools\"[root@localhost ~]# yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel 注意 安装python3.7以上版本，需要安装libffi-devel2.下载Python3源码文件官网选择所需要的Python版本的，这里用的是Python3.10.6[root@localhost ~]# cd /usr/local/src/[root@localhost ~]# wget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz3.安装Python3[root@localhost ~]# tar -zxvf Python-3.10.6.tgz[root@localhost ~]# mkdir /usr/local/python3[root@localhost ~]# cd Python-3.10.6[root@localhost ~]# ./configure --prefix=/usr/local/python3[root@localhost ~]# make &amp;&amp; make install 命令解释：解压压缩包创建安装目录进入解压后的安装包文件夹配置安装目录编译 安装4.创建软链接[root@localhost ~]# ln -s /usr/local/python3/bin/python3 /usr/bin/python3[root@localhost ~]# ln -s /usr/local/python3/bin/pip3 /usr/bin/pip35.配置动态链接库[root@localhost ~]# echo \"/usr/local/python3/lib\" &gt;/etc/ld.so.conf.d/python3.conf6.验证Python3版本号[root@localhost ~]# python3 -VPython 3.10.6" }, { "title": "亚马逊服务器开启密码远程，启用root账号", "url": "/posts/linux-user-root/", "categories": "Linux, User, Root", "tags": "Linux", "date": "2022-09-15 07:00:00 +0000", "snippet": "有些服务器系统版本初始化之后，默认是没有开启root用户远程登录的，使用中会有一些权限限制，有需要的时候，需要手动开启一下。启用Root账号1.登录服务器使用默认用户，通过管理后台，或者使用证书(默认用户名)通终端、第三方工具登录服务器2.切换Root用户[root@localhost ~]# sudo -i3.设置root账户密码[root@localhost ~]# passwd root4.编辑配置文件如果vim没有安装需要先安装[root@localhost ~]# yum install -y vim辑sshd_config文件[root@localhost ~]# vim /etc/ssh/sshd_configPermitRootLogin 直接删除掉前面的#号就开启了root账户登陆PasswordAuthentication 设置为yes，开启密码登陆ESC退出编辑模式 :wq保存并退出5.重启ssh[root@localhost ~]# service sshd restartssh -p 22 root@xxx.xxx.xxx.xxx登录成功~" }, { "title": "Nginx安装", "url": "/posts/linux-nginx-install/", "categories": "Linux, Nginx", "tags": "Linux, Nginx", "date": "2022-09-03 07:00:00 +0000", "snippet": "对于Linux，可以使用来自nginx.org的nginx软件包，也可以从源代码编译来安装nginx。Nginx编译安装1.安装前工作首先更新系统软件源，使用以下命令更新系统[root@localhost ~]# yum update 有关两个命令的一点解释：yum -y update - 升级所有包，改变软件设置和系统设置,系统版本内核都升级yum -y upgrade - 升级所有包，不改变软件设置和系统设置，系统版本升级，内核不改变依赖包安装[root@localhost src]# yum -y install gcc gcc-c++ autoconf automake libtool make cmake[root@localhost src]# yum -y install zlib zlib-devel openssl openssl-devel pcre-devel2.下载Nginx安装源文件源码下载，可官网下载地址：http://nginx.org/en/download.html 下载并上传到服务器(选择最新稳定版本：nginx-1.22.0)或直接在服务上执行以下命令下载 -[root@localhost ~]# cd /usr/local/src[root@localhost src]# wget -c http://nginx.org/download/nginx-1.22.0.tar.gz解压上面下载的文件 -[root@localhost src]# tar zxvf nginx-1.22.0.tar.gz在编译之前还要做一些前期的准备工作，如：依懒包安装，Nginx用户和用户组等。3.新建nginx用户及用户组使用 root 用户身份登录系统，执行以下命令创建新的用户。[root@localhost src]# groupadd nginx[root@localhost src]# useradd -g nginx -M nginxuseradd命令的-M参数用于不为nginx建立home目录修改/etc/passwd，使得nginx用户无法bash登陆(nginx用户后面由/bin/bash改为/sbin/nologin)，[root@localhost src]# vi /etc/passwd然后找到有 nginx 那一行，把它修改为(后面由/bin/bash改为/sbin/nologin)：nginx:x:1002:1003::/home/nginx:/sbin/nologin4.编译配置、编译、安装下面我们进入解压的nginx源码目录：/usr/local/src/ 执行以下命令 -[root@localhost ~]# cd /usr/local/src/nginx*[root@localhost nginx-1.22.0]# pwd/usr/local/src/nginx-1.22.0[root@localhost nginx-1.22.0]#[root@localhost nginx-1.22.0]# ./configure --prefix=/usr/local/nginx \\--pid-path=/usr/local/nginx/run/nginx.pid \\--with-http_ssl_module \\--user=nginx \\ --group=nginx \\--with-pcre \\--without-mail_pop3_module \\--without-mail_imap_module \\--without-mail_smtp_module 注意：上面的反斜杠\\ 表示换行继续。--prefix=/usr/local/nginx 指定安装到 /usr/local/nginx 目录下。上面配置完成后，接下来执行编译 -[root@localhost nginx-1.22.0]# make[root@localhost nginx-1.22.0]# make install... ...cp conf/nginx.conf '/usr/local/nginx/conf/nginx.conf.default'test -d '/usr/local/nginx/run' \\ || mkdir -p '/usr/local/nginx/run'test -d '/usr/local/nginx/logs' \\ || mkdir -p '/usr/local/nginx/logs'test -d '/usr/local/nginx/html' \\ || cp -R html '/usr/local/nginx'test -d '/usr/local/nginx/logs' \\ || mkdir -p '/usr/local/nginx/logs'make[1]: Leaving directory `/usr/local/src/nginx-1.22.0'[root@localhost nginx-1.22.0]#上面编译时间跟你的电脑配置相关，所以可能需要一些等待时间。查看安装后的程序版本：[root@localhost nginx-1.22.0]# /usr/local/nginx/sbin/nginx -vnginx version: nginx/1.22.0修改Nginx默认端口(可选)：[root@localhost nginx-1.22.0]# vi /usr/local/nginx/conf/nginx.conf找到 -... ... server { listen 80; server_name localhost;... ...把上面的 80 修改为你想要的端口，如：8080 。修改配置后验证配置是否合法：[root@localhost nginx-1.22.0]# /usr/local/nginx/sbin/nginx -tnginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is oknginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful启动Nginx程序、查看进程 -[root@localhost nginx-1.22.0]# /usr/local/nginx/sbin/nginx[root@localhost nginx-1.22.0]# ps -ef | grep nginxroot 4352 1 0 14:00 ? 00:00:00 nginx: master process /usr/local/nginx/sbin/nginxnginx 4353 4352 0 14:00 ? 00:00:00 nginx: worker processroot 4735 10590 0 17:01 pts/0 00:00:00 grep --color=auto nginx[root@localhost nginx-1.22.0]#nginx停止、重启未添加nginx服务前对nginx的管理只能通过一下方式管理：# nginx 管理的几种方式 -# 启动Nginx /usr/local/nginx/sbin/nginx # 从容停止Nginx：kill -QUIT 主进程号 # 如上一步中的 ps 命令输出的 4352，就是 Nginx的主进程号# 快速停止Nginx：kill -TERM 主进程号# 强制停止Nginx：pkill -9 nginx# 平滑重启nginx/usr/nginx/sbin/nginx -s reload现在我们来看看安装的Nginx的运行结果，可以简单地使用curl命令访问localhost测试，结果如下 -[root@localhost nginx-1.22.0]# curl localhost&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Welcome to nginx!&lt;/title&gt;&lt;style&gt;html { color-scheme: light dark; }body { width: 35em; margin: 0 auto;font-family: Tahoma, Verdana, Arial, sans-serif; }&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;&lt;p&gt;If you see this page, the nginx web server is successfully installed andworking. Further configuration is required.&lt;/p&gt;&lt;p&gt;For online documentation and support please refer to&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;Commercial support is available at&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;[root@localhost nginx-1.22.0]#或者也可以打开浏览访问目标服务器的IP+端口号查看。设置Nginx开机自启动进入到/lib/systemd/system/目录cd /lib/systemd/system/创建nginx.service文件，并编辑vi nginx.service内容：[Unit]Description=nginx serviceAfter=network.target[Service] Type=forking ExecStart=/usr/local/nginx/sbin/nginxExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s quitPrivateTmp=true[Install] WantedBy=multi-user.target加入开机自启设置开机自启[root@localhost ~]# systemctl enable nginx取消开机自启[root@localhost ~]# systemctl disable nginx服务的启动/停止/刷新配置文件/查看状态systemctl start nginx.service　 启动systemctl stop nginx.service　 停止systemctl restart nginx.service　 重启systemctl list-units –type=service 查看所有已启动的服务systemctl status nginx.service 查看服务状态systemctl enable nginx.service 设置开机自启systemctl disable nginx.service 关闭开机自启" } ]
